<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>キングダム乱 争覇戦 作戦ボード</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #f8f8f8;
            touch-action: manipulation;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }
        #board-container {
            width: 90vw;
            height: 75vh;
            background-color: #ffffff;
            border: 5px solid black;
            position: relative;
        }
        .castle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            border: 2px solid black;
            user-select: none;
            position: absolute;
        }
        .castle[data-pt="1000"] { background-color: blue; }
        .castle[data-pt="1600"] { background-color: green; }
        .castle[data-pt="2700"] { background-color: red; }
        #castle-menu {
            display: flex;
            gap: 15px;
            margin-top: 10px;
        }
        .castle-option {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            border: 2px solid black;
            border-radius: 50%;
            cursor: pointer;
        }
        .castle-option[data-pt="1000"] { background-color: blue; }
        .castle-option[data-pt="1600"] { background-color: green; }
        .castle-option[data-pt="2700"] { background-color: red; }
    </style>
</head>
<body>
    <div id="board-container"></div>
    <div id="castle-menu">
        <div class="castle-option" data-pt="1000">1000</div>
        <div class="castle-option" data-pt="1600">1600</div>
        <div class="castle-option" data-pt="2700">2700</div>
    </div>
    <script>
        const board = document.getElementById("board-container");
        const castleOptions = document.querySelectorAll(".castle-option");
        let selectedCastleType = null;

        castleOptions.forEach(option => {
            option.addEventListener("click", () => {
                selectedCastleType = option.dataset.pt;
            });
        });

        board.addEventListener("click", (event) => {
            if (!selectedCastleType) return;

            const rect = board.getBoundingClientRect();
            const x = event.clientX - rect.left - 25;
            const y = event.clientY - rect.top - 25;

            const castle = document.createElement("div");
            castle.className = "castle";
            castle.dataset.pt = selectedCastleType;
            castle.style.left = `${x}px`;
            castle.style.top = `${y}px`;
            castle.innerText = selectedCastleType;

            castle.addEventListener("mousedown", (e) => {
                const offsetX = e.clientX - castle.offsetLeft;
                const offsetY = e.clientY - castle.offsetTop;
                function moveAt(pageX, pageY) {
                    castle.style.left = `${pageX - offsetX}px`;
                    castle.style.top = `${pageY - offsetY}px`;
                }
                function onMouseMove(event) {
                    moveAt(event.pageX, event.pageY);
                }
                document.addEventListener("mousemove", onMouseMove);
                document.addEventListener("mouseup", () => {
                    document.removeEventListener("mousemove", onMouseMove);
                }, { once: true });
            });

            board.appendChild(castle);
        });
    </script>
</body>
</html>
